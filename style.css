header {
    background: lightgreen;
    padding: 20px 0; /* 20px para cima e 0 para baixo */
}

nav li {
    display: inline; /* deixar o itens no menu lado a lado */
    margin: 0 0 0 15px;
}

nav a {
    text-transform: uppercase;
    color: #000000;
    font-weight: bold;
    font-size: 22px;
    text-decoration: none;
}

/*
Essa largura, ela é uma largura padrão que se usa na web, porque a maioria das boas resoluções é de 1.260 pixels de largura, quando você usa 940, você está numa boa margem.
*/
.caixa {
    position: relative;
    width: 940px;
    margin: 0 auto;
}


nav {
    position: absolute;
    top: 110px;
    right: 0;
}

/* Resumo de posicionamento

"Posicionamento estático" refere-se ao fluxo normal da página com a qual trabalhamos até esse momento. 
O Box Model, floats e flexbox operam nesse fluxo "estático", mas esse não é o único esquema de posicionamento disponível no CSS.

O "posicionamento relativo" move os elementos em torno de onde eles normalmente apareceriam no 
fluxo estático da página. Isso é útil para empurrar as caixas quando o fluxo padrão está um pouco fora.
A posição: relativa; Torna um elemento posicionado, e as propriedades superior e esquerda permitem definir a que distância está sua posição estática.
As propriedades superior, esquerda, direita e baixo permitem definir a  distância a partiri da sua posição estática.

Não daria para fazer com margem? Existem uma diferença, nem os elementos circundantes nem o elemento pai são afetados pelos valores superior, esquerdo, direito e baixo. 


O "posicionamento absoluto" é igual ao posicionamento relativo, mas o deslocamento é relativo à janela inteira do navegador, em vez da posição original do elemento.
Remove completamente um elemento do fluxo normal da página.


O "posicionamento fixo" tem muito em comum com o posicionamento absoluto: é muito manual, o elemento é removido do fluxo normal da página e o sistema de coordenadas é relativo a toda a janela do navegador. 
A principal diferença é que os elementos fixos não rolam com o restante da página.

*/

/* Estilizando os itens referentes aos serviços */
.produtos {
    width: 940px;
    margin: 0 auto;
    padding: 50px 0;
}

.produtos li {
    display: inline-block;
    text-align: center;
    width: 30%;
    vertical-align: top;
    margin: 0 1.5%;
    padding: 30px 20px;
    /* utilizada para alterar a propriedade padrão da box model */
    box-sizing: border-box; 
    /* borda entre o padding e o margin */
    border: 2px solid #000000;
    border-radius: 10px;
}

.produtos h2 {
    font-size: 30px;
    font-weight: bold;
}

.produto-descricao {
    font-size: 18px;
}

.produto-preco {
    font-size: 22px;
    font-weight: bold;
    margin-top: 10px;
}

/* Em todos os elementos do HTML consigo mapear o comportamento com CSS e alterar o visual do elemento. */

/* Pseudo-classes de estado - Hover */

/* Hover: quando o usuário passa o cursor sobre o elemento */ 
/* Quando um elemento está sendo ativado pelo usuário */
nav a:hover {
    color: #C78C19;
    text-decoration: underline;
}

.produtos li:hover {
    border-color: #C78C19;
}

/* Active: Quando um elemento está sendo ativado pelo usuário */
.produtos li:active {
    border-color: #088C19;    
}

.produtos li:hover h2 {
    font-size: 34px;
}

/* tag semântica e caractere especial */
footer {
    text-align: center;
    background: url("img/bg.jpg");
    padding: 30px 0;
}

/* Os caracteres Unicode estão disponíveis para serem usados como um complemento ao nosso texto.*/
.copyright {
    color: #FFFFFF;
    font-size: 13px;
    margin: 20px 0 0;
}

/**********************/
/* Página de contato */

main {
	width: 940px;
	margin: 0 auto;
}

form {
	margin: 40px 0;
}


form label {
    /* Displays an element as a block element (like <p>). It starts on a new line, and takes up the whole width	*/
    display:block;
    font-size: 20px;
    margin: 0 0 10px;
}

/* Estilo do paragrafo do form */
form label, form legend {
    display:block;
    font-size: 20px;
    margin: 0 0 10px;
}

/* Estilo do input do form */
.input-padrao {
	display: block;
	margin: 0 0 20px;
	padding: 10px 25px;
	width: 50%;
}

.checkbox {
    margin: 20px 0;
}

/*********************/
/*
id --> 100
class --> 10
tag --> 1
inline --> 1000

Exemplo: 
p --> 1
form p --> 1+1 = 2
.nomeClasse --> 10
p.form --> 10+1
*/

